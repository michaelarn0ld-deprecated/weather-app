{"version":3,"sources":["Components/CurrentWeather.js","App.js","index.js"],"names":["CurrentWeather","data","useState","units","setUnits","date","Date","location","localtime","width","window","innerWidth","console","log","convertTime12to24","time12h","split","time","modifier","hours","minutes","parseInt","className","undefined","error","name","region","country","getMonth","getDate","getFullYear","getDay","slice","length","onClick","Math","round","current","temp_f","temp_c","src","condition","icon","alt","text","wind_mph","wind_kph","humidity","feelslike_f","feelslike_c","vis_miles","vis_km","pressure_in","pressure_mb","toFixed","air_quality","forecast","forecastday","map","index","forecastdate","day","maxtemp_f","maxtemp_c","mintemp_f","mintemp_c","astro","sunrise","class","sunset","App","hasSubmitted","setHasSubmitted","weather","setWeather","search","setSearch","query","setQuery","counter","setCounter","i","setI","weatheranimateIn","gsap","timeline","useEffect","getRecipe","to","ease","Power3","easeInOut","opacity","duration","tl","y","delay","a","fetch","response","json","onSubmit","event","preventDefault","setTimeout","type","value","onChange","target","placeholder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ef2099e.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport './CurrentWeather.scss';\nimport './Forecast.scss';\n\nfunction CurrentWeather({ data }) {\n  const [units, setUnits] = useState(false);\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  const dayNames = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n  const date = new Date(data?.location?.localtime);\n  const width = window.innerWidth;\n\n  console.log(width);\n  const convertTime12to24 = (time12h) => {\n    const [time, modifier] = time12h.split(' ');\n    let [hours, minutes] = time.split(':');\n    if (hours === '12') {\n      hours = '00';\n    }\n    if (modifier === 'PM') {\n      hours = parseInt(hours, 10) + 12;\n    }\n    return `${hours}:${minutes}`;\n  };\n  return (\n    <div className=\"current-weather\">\n      {data?.error === undefined ? (\n        <div className=\"return-data\">\n          <div className=\"current-weather-header\">\n            <div className=\"current-weather-header-location\">\n              <h2>\n                {data?.location?.name}, {data?.location?.region},{' '}\n                {width <= 960 ? '' : data?.location?.country}\n              </h2>\n              <h2>{width > 960 ? '' : data?.location?.country}</h2>\n              <h2>\n                {width > 960\n                  ? `${monthNames[date.getMonth()]} ${date.getDate()},\n                ${date.getFullYear()} | ${dayNames[date.getDay()]}\n                ${data?.location?.localtime.slice(\n                  data?.location?.localtime.length - 5\n                )}`\n                  : data?.location?.localtime}\n              </h2>\n            </div>\n            <div className=\"current-weather-header-units\">\n              <h1\n                onClick={() => setUnits(false)}\n                className={\n                  units\n                    ? 'current-weather-header-degrees'\n                    : 'current-weather-header-degrees active'\n                }\n              >\n                &deg;C\n              </h1>\n              <h2 className=\"unit-seperator\">|</h2>\n              <h1\n                onClick={() => setUnits(true)}\n                className={\n                  units\n                    ? 'current-weather-header-degrees active'\n                    : 'current-weather-header-degrees'\n                }\n              >\n                &deg;F\n              </h1>\n            </div>\n          </div>\n          <div className=\"current-weather-conditions\">\n            <div className=\"current-weather-conditions-temperature\">\n              <h1>\n                {units\n                  ? Math.round(data?.current?.temp_f) + '\\xB0'\n                  : Math.round(data?.current?.temp_c) + '\\xB0'}\n              </h1>\n            </div>\n            <div className=\"current-weather-conditions-icon\">\n              <img src={data?.current?.condition?.icon} alt=\"None\" />\n              <h2>{width <= 960 ? '' : data?.current?.condition?.text}</h2>\n            </div>\n            <div className=\"current-weather-conditions-measure\">\n              <h3>\n                Wind:{' '}\n                {units\n                  ? Math.round(data?.current?.wind_mph) + ' mph'\n                  : Math.round(data?.current?.wind_kph) + ' kph'}\n              </h3>\n              <h3>Humidity: {data?.current?.humidity}%</h3>\n              <h3>\n                Feels Like:{' '}\n                {units\n                  ? Math.round(data?.current?.feelslike_f) + '\\xB0'\n                  : Math.round(data?.current?.feelslike_c) + '\\xB0'}\n              </h3>\n            </div>\n            <div className=\"current-weather-conditions-measure\">\n              <h3>\n                Visibility:{' '}\n                {units\n                  ? data?.current?.vis_miles + ' mi'\n                  : data?.current?.vis_km + ' km'}\n              </h3>\n              <h3>\n                Pressure:{' '}\n                {units\n                  ? data?.current?.pressure_in + ' in'\n                  : (data?.current?.pressure_mb * 0.1).toFixed(1) + ' kPa'}\n              </h3>\n              <h3>Air Quality: {data?.current?.air_quality['us-epa-index']}</h3>\n            </div>\n          </div>\n          <div className=\"forecast-weather\">\n            {data?.forecast?.forecastday.map((forecast, index) => {\n              const forecastdate = new Date(forecast?.date);\n              const forecastdayNames = [\n                'Mon',\n                'Tue',\n                'Wed',\n                'Thu',\n                'Fri',\n                'Sat',\n                'Sun',\n              ];\n              return (\n                <div className=\"forecast-wrapper\" key={index}>\n                  <h1>{forecastdayNames[forecastdate.getDay()]}</h1>\n                  <img src={forecast?.day?.condition?.icon} alt=\"None\" />\n                  <div className=\"forecast-high-low\">\n                    {units\n                      ? Math.round(forecast?.day?.maxtemp_f) + '\\xB0'\n                      : Math.round(forecast?.day?.maxtemp_c) + '\\xB0'}{' '}\n                    |{' '}\n                    {units\n                      ? Math.round(forecast?.day?.mintemp_f) + '\\xB0'\n                      : Math.round(forecast?.day?.mintemp_c) + '\\xB0'}\n                  </div>\n                  <h2>\n                    {convertTime12to24(forecast?.astro?.sunrise)}{' '}\n                    <i class=\"fas fa-sun\"></i>\n                  </h2>\n                  <h2>\n                    {convertTime12to24(forecast?.astro?.sunset)}{' '}\n                    <i class=\"fas fa-moon\"></i>\n                  </h2>\n                </div>\n              );\n            })}\n          </div>{' '}\n        </div>\n      ) : (\n        <div className=\"error\">\n          <i class=\"far fa-frown\"></i>\n          <h1>\n            Whoops! It looks like you entered an invalid city, please try again.\n          </h1>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CurrentWeather;\n","import React from 'react';\nimport CurrentWeather from './Components/CurrentWeather';\nimport { useEffect, useState } from 'react';\nimport { gsap, Power3 } from 'gsap';\nimport './App.scss';\n\nfunction App() {\n  const API_KEY = 'd7e8027877484293a6a40033211803';\n  const [hasSubmitted, setHasSubmitted] = useState(false);\n  const [weather, setWeather] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('Los Angeles');\n  const [counter, setCounter] = useState(0);\n  const [i, setI] = useState(0);\n\n  let weatheranimateIn = gsap.timeline();\n\n  useEffect(() => {\n    getRecipe();\n  }, [query]);\n\n  useEffect(() => {\n    return () => {\n      let weatheranimate = gsap.timeline();\n      weatheranimate.to('.current-weather', {\n        ease: Power3.easeInOut,\n        opacity: 0,\n        duration: 0.4,\n      });\n    };\n  }, [counter]);\n\n  useEffect(() => {\n    return () => {\n      let tl = gsap.timeline();\n      tl.to('.upper-content-header', { opacity: 0, y: -100, delay: 0.5 });\n      tl.to('.search-bar', {\n        ease: Power3.easeInOut,\n        y: '-45vh',\n        duration: 1,\n      });\n      tl.to('.current-weather', {\n        ease: Power3.easeInOut,\n        opacity: 1,\n        duration: 0.5,\n      });\n    };\n  }, [hasSubmitted, counter]);\n\n  const getRecipe = async () => {\n    const response = await fetch(\n      `https://api.weatherapi.com/v1/forecast.json?key=${API_KEY}&q=${query}&days=3&aqi=yes&alerts=no`\n    );\n    const data = await response.json();\n    setWeather(data);\n    if (counter < 1) {\n      weatheranimateIn.to('.current-weather', {\n        ease: Power3.easeInOut,\n        opacity: 1,\n        duration: 0.4,\n        delay: 2,\n      });\n    } else {\n      weatheranimateIn.to('.current-weather', {\n        ease: Power3.easeInOut,\n        opacity: 1,\n        duration: 0.4,\n      });\n    }\n  };\n  const updateSearch = (event) => {\n    setSearch(event.target.value);\n  };\n\n  const getSearch = (event) => {\n    event.preventDefault();\n    setSearch('');\n    setHasSubmitted(true);\n    setI(i + 1);\n    if (i > 0) setCounter(counter + 1);\n    setTimeout(() => setQuery(search), 290);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"upper-content\">\n        <h1 className=\"upper-content-header\">Weather App</h1>\n      </div>\n      <form className=\"search-bar\" onSubmit={getSearch}>\n        <input\n          type=\"text\"\n          name=\"\"\n          value={search}\n          onChange={updateSearch}\n          className=\"search-bar-input\"\n          placeholder=\"Enter a city...\"\n        />\n        <button className=\"search-bar-submit\">\n          <i className=\"fas fa-search\"></i>\n        </button>\n      </form>\n      {hasSubmitted && <CurrentWeather data={weather} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}