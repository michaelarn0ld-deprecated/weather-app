{"version":3,"sources":["Components/CurrentWeather.js","App.js","index.js"],"names":["CurrentWeather","data","useState","units","setUnits","date","Date","location","localtime","convertTime12to24","time12h","split","time","modifier","hours","minutes","parseInt","className","name","region","country","getMonth","getDate","getFullYear","getDay","slice","length","onClick","Math","round","current","temp_f","temp_c","src","condition","icon","alt","text","wind_mph","wind_kph","humidity","feelslike_f","feelslike_c","vis_miles","vis_km","pressure_in","pressure_mb","toFixed","air_quality","forecast","forecastday","map","forecastdate","day","maxtemp_f","maxtemp_c","mintemp_f","mintemp_c","astro","sunrise","class","sunset","App","hasSubmitted","setHasSubmitted","weather","setWeather","search","setSearch","query","setQuery","counter","setCounter","i","setI","useEffect","getRecipe","weatheranimate","gsap","timeline","to","ease","Power3","easeInOut","opacity","duration","delay","tl","y","a","fetch","response","json","onSubmit","event","preventDefault","setTimeout","type","value","onChange","target","placeholder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1540f800.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport './CurrentWeather.scss';\nimport './Forecast.scss';\n\nfunction CurrentWeather({ data }) {\n  const [units, setUnits] = useState(false);\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  const dayNames = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n  const date = new Date(data?.location?.localtime);\n  const convertTime12to24 = (time12h) => {\n    const [time, modifier] = time12h.split(' ');\n    let [hours, minutes] = time.split(':');\n    if (hours === '12') {\n      hours = '00';\n    }\n    if (modifier === 'PM') {\n      hours = parseInt(hours, 10) + 12;\n    }\n    return `${hours}:${minutes}`;\n  };\n  return (\n    <div className=\"current-weather\">\n      <div className=\"current-weather-header\">\n        <div className=\"current-weather-header-location\">\n          <h2>\n            {data?.location?.name}, {data?.location?.region},{' '}\n            {data?.location?.country}\n          </h2>\n          <h2>\n            {monthNames[date.getMonth()]} {date.getDate()}, {date.getFullYear()}{' '}\n            | {dayNames[date.getDay()]}{' '}\n            {data?.location?.localtime.slice(\n              data?.location?.localtime.length - 5\n            )}\n          </h2>\n        </div>\n        <div className=\"current-weather-header-units\">\n          <h1\n            onClick={() => setUnits(false)}\n            className={\n              units\n                ? 'current-weather-header-degrees'\n                : 'current-weather-header-degrees active'\n            }\n          >\n            &deg;C\n          </h1>\n          <h2 className=\"unit-seperator\">|</h2>\n          <h1\n            onClick={() => setUnits(true)}\n            className={\n              units\n                ? 'current-weather-header-degrees active'\n                : 'current-weather-header-degrees'\n            }\n          >\n            &deg;F\n          </h1>\n        </div>\n      </div>\n      <div className=\"current-weather-conditions\">\n        <div className=\"current-weather-conditions-temperature\">\n          <h1>\n            {units\n              ? Math.round(data?.current?.temp_f) + '\\xB0'\n              : Math.round(data?.current?.temp_c) + '\\xB0'}\n          </h1>\n        </div>\n        <div className=\"current-weather-conditions-icon\">\n          <img src={data?.current?.condition?.icon} alt=\"None\" />\n          <h2>{data?.current?.condition?.text}</h2>\n        </div>\n        <div className=\"current-weather-conditions-measure\">\n          <h3>\n            Wind:{' '}\n            {units\n              ? Math.round(data?.current?.wind_mph) + ' mph'\n              : Math.round(data?.current?.wind_kph) + ' kph'}\n          </h3>\n          <h3>Humidity: {data?.current?.humidity}%</h3>\n          <h3>\n            Feels Like:{' '}\n            {units\n              ? Math.round(data?.current?.feelslike_f) + '\\xB0'\n              : Math.round(data?.current?.feelslike_c) + '\\xB0'}\n          </h3>\n        </div>\n        <div className=\"current-weather-conditions-measure\">\n          <h3>\n            Visibility:{' '}\n            {units\n              ? data?.current?.vis_miles + ' mi'\n              : data?.current?.vis_km + ' km'}\n          </h3>\n          <h3>\n            Pressure:{' '}\n            {units\n              ? data?.current?.pressure_in + ' in'\n              : (data?.current?.pressure_mb * 0.1).toFixed(1) + ' kPa'}\n          </h3>\n          <h3>Air Quality: {data?.current?.air_quality['us-epa-index']}</h3>\n        </div>\n      </div>\n      <div className=\"forecast-weather\">\n        {data?.forecast?.forecastday.map((forecast) => {\n          const forecastdate = new Date(forecast?.date);\n          const forecastdayNames = [\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat',\n            'Sun',\n          ];\n          return (\n            <div className=\"forecast-wrapper\">\n              <h1>{forecastdayNames[forecastdate.getDay()]}</h1>\n              <img src={forecast?.day?.condition?.icon} alt=\"None\" />\n              <div className=\"forecast-high-low\">\n                {units\n                  ? Math.round(forecast?.day?.maxtemp_f) + '\\xB0'\n                  : Math.round(forecast?.day?.maxtemp_c) + '\\xB0'}{' '}\n                |{' '}\n                {units\n                  ? Math.round(forecast?.day?.mintemp_f) + '\\xB0'\n                  : Math.round(forecast?.day?.mintemp_c) + '\\xB0'}\n              </div>\n              <h2>\n                {convertTime12to24(forecast?.astro?.sunrise)}{' '}\n                <i class=\"fas fa-sun\"></i>\n              </h2>\n              <h2>\n                {convertTime12to24(forecast?.astro?.sunset)}{' '}\n                <i class=\"fas fa-moon\"></i>\n              </h2>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default CurrentWeather;\n","import React from 'react';\nimport CurrentWeather from './Components/CurrentWeather';\nimport { useEffect, useState } from 'react';\nimport { gsap, Power3 } from 'gsap';\nimport './App.scss';\n\nfunction App() {\n  const API_KEY = 'd7e8027877484293a6a40033211803';\n  const [hasSubmitted, setHasSubmitted] = useState(false);\n  const [weather, setWeather] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('Los Angeles');\n  const [counter, setCounter] = useState(0);\n  const [i, setI] = useState(0);\n\n  useEffect(() => {\n    getRecipe();\n  }, [query]);\n\n  useEffect(() => {\n    return () => {\n      let weatheranimate = gsap.timeline();\n      weatheranimate.to('.current-weather', {\n        ease: Power3.easeInOut,\n        opacity: 0,\n        duration: 0.5,\n      });\n      weatheranimate.to('.current-weather', {\n        ease: Power3.easeInOut,\n        opacity: 1,\n        duration: 0.5,\n        delay: 0.8,\n      });\n    };\n  }, [counter]);\n\n  useEffect(() => {\n    return () => {\n      let tl = gsap.timeline();\n      tl.to('.upper-content-header', { opacity: 0, y: -100, delay: 0.5 });\n      tl.to('.search-bar', { ease: Power3.easeInOut, y: '-45vh', duration: 1 });\n      tl.to('.current-weather', {\n        ease: Power3.easeInOut,\n        opacity: 1,\n        duration: 0.5,\n      });\n    };\n  }, [hasSubmitted]);\n\n  const getRecipe = async () => {\n    const response = await fetch(\n      `https://api.weatherapi.com/v1/forecast.json?key=${API_KEY}&q=${query}&days=3&aqi=yes&alerts=no`\n    );\n    const data = await response.json();\n    setWeather(data);\n  };\n\n  const updateSearch = (event) => {\n    setSearch(event.target.value);\n  };\n\n  const getSearch = (event) => {\n    event.preventDefault();\n    setSearch('');\n    setHasSubmitted(true);\n    setI(i + 1);\n    if (i > 0) setCounter(counter + 1);\n    setTimeout(() => setQuery(search), 290);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"upper-content\">\n        <h1 className=\"upper-content-header\">Weather App</h1>\n      </div>\n      <form className=\"search-bar\" onSubmit={getSearch}>\n        <input\n          type=\"text\"\n          name=\"\"\n          value={search}\n          onChange={updateSearch}\n          className=\"search-bar-input\"\n          placeholder=\"Enter a city...\"\n        />\n        <button className=\"search-bar-submit\">\n          <i className=\"fas fa-search\"></i>\n        </button>\n      </form>\n      {hasSubmitted && <CurrentWeather data={weather} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}